---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aserto-directory.fullname" . }}
  labels:
    {{- include "aserto-directory.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: aserto-directory
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{- include "aserto-directory.labels" . | nindent 8 }}
    spec:
      initContainers:
        - name: init-db
          image: bitnami/postgresql:15.1.0-debian-11-r31
          env:
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: {{ include "aserto-directory.fullname" . }}-secret
                  key: initPGHOST
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: {{ include "aserto-directory.fullname" . }}-secret
                  key: initPGDATABASE
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: {{ include "aserto-directory.fullname" . }}-secret
                  key: initPGUSER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "aserto-directory.fullname" . }}-secret
                  key: initPGPASSWORD
          command:
            - sh
            - -c
            - |
              psql -h $PGHOST -U $PGUSER $PGDATABASE -tc \
                "SELECT 1 FROM pg_user WHERE usename = 'tenant_reader'" \
                | grep -q 1 \
                || psql -h $PGHOST -U $PGUSER $PGDATABASE \
                -c "CREATE ROLE tenant_reader LOGIN PASSWORD '{{ .Values.global.postgresql.auth.postgresPassword }}';";

              psql -h $PGHOST -U $PGUSER $PGDATABASE \
                -c "GRANT ALL ON SCHEMA public TO tenant_reader;";

      containers:
        - name: aserto-directory
          resources:
            requests:
              memory: "256Mi"
              cpu: "50m"
            limits:
              memory: "2048Mi"
              cpu: "2000m"
          image: ghcr.io/aserto-dev/directory:{{ .Values.global.directory.version }}
          args: ["--config", "/config/config.yaml", "run"]
          readinessProbe:
            tcpSocket:
              port: 8383
            initialDelaySeconds: 5
            periodSeconds: 10
          ports:
            - containerPort: 8383
              name: https
            - containerPort: 8282
              name: https-grpc
            - containerPort: 8585
              name: http-metrics
          volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
      volumes:
        - name: config
          secret:
            secretName: {{ include "aserto-directory.fullname" . }}-secret
            items:
              - key: config.yaml
                path: config.yaml